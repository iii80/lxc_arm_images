name: Build PVE KVM images
on:
  workflow_dispatch:

jobs:
  build_lxc_arm_images:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: check path
      run: |
        pwd

    - name: Configure Git
      run: |
        git config --global user.name "daily-update"
        git config --global user.email "tg@spiritlhl.top"

    - name: Environment preparation
      run: |
        sudo apt-get update
        sudo apt-get install -y curl wget unzip zip jq
        curl -o run.sh https://raw.githubusercontent.com/oneclickvirt/lxc_arm_images/main/run.sh
        chmod 777 run.sh

    - name: Download qcow2
      run: | 
        ./run.sh
      
    - name: Build and Upload Images
      run: |
        systems=("debian" "ubuntu" "centos" "kali" "rockylinux" "almalinux" "alpine" "openwrt" "oracle"  "fedora" "openeuler" "gentoo" "devuan")
        images=($(ls | grep "cloud"))
        if [ ${#images[@]} -gt 0 ]; then
            for system in "${systems[@]}"; do
              release_id=$(curl -s -m 6 -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/oneclickvirt/lxc_arm_images/releases/tags/$system" | jq -r '.id')
              for file in "${images[@]}"; do
                  echo "Checking if $file already exists in release..."
                  existing_asset_id=$(curl -s -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/oneclickvirt/lxc_arm_images/releases/$release_id/assets" | jq -r --arg name "$(basename "$file")" '.[] | select(.name == $name) | .id')
                  if [ -n "$existing_asset_id" ]; then
                      echo "Asset $file already exists in release, deleting existing asset..."
                      delete_response=$(curl -s -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/oneclickvirt/lxc_arm_images/releases/assets/$existing_asset_id")
                      echo "$delete_response"
                      if [ $? -eq 0 ] && ! echo "$delete_response" | grep -q "error"; then
                          echo "Existing asset deleted successfully."
                      else
                          echo "Failed to delete existing asset. Skipping file upload..."
                          rm -rf $file
                          continue
                      fi
                  else
                      echo "No $file file."
                  fi
                  echo "Uploading images"
                  if [ -f "$file" ] && [ $(stat -c %s "$file") -gt 10485760 ]; then
                      echo "Uploading $file to release..."
                      curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                        -H "Content-Type: application/zip" \
                        --data-binary @"$file" \
                        "https://uploads.github.com/repos/oneclickvirt/lxc_arm_images/releases/$release_id/assets?name=$(basename "$file")"
                      rm -rf $file
                  else
                      echo "No $file or less than 10 MB"
                  fi
              done
            done
        else
            echo "NO LXC IMAGES"
        fi
        
